"""empty message

Revision ID: 2e77c66e5cf6
Revises: 
Create Date: 2024-01-17 23:24:04.057627

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '2e77c66e5cf6'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('roles',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_roles')),
    sa.UniqueConstraint('name', name=op.f('uq_roles_name'))
    )
    op.create_table('sections',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_sections'))
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('last_login_at', sa.DateTime(), nullable=True),
    sa.Column('current_login_at', sa.DateTime(), nullable=True),
    sa.Column('last_login_ip', sa.String(), nullable=True),
    sa.Column('current_login_ip', sa.String(), nullable=True),
    sa.Column('login_count', sa.Integer(), nullable=True),
    sa.Column('fs_uniquifier', sa.String(length=64), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users')),
    sa.UniqueConstraint('email', name=op.f('uq_users_email')),
    sa.UniqueConstraint('fs_uniquifier', name=op.f('uq_users_fs_uniquifier')),
    sa.UniqueConstraint('username', name=op.f('uq_users_username'))
    )
    op.create_table('UsersRoles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], name=op.f('fk_UsersRoles_role_id_roles')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_UsersRoles_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_UsersRoles'))
    )
    op.create_table('books',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('noofcopies', sa.Integer(), nullable=True),
    sa.Column('author', sa.String(), nullable=True),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('section_id', sa.Integer(), nullable=True),
    sa.Column('storage', sa.String(), nullable=True),
    sa.Column('thumbnail', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['section_id'], ['sections.id'], name=op.f('fk_books_section_id_sections')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_books'))
    )
    op.create_table('payment_details',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('cardno', sa.Integer(), nullable=False),
    sa.Column('cardname', sa.String(), nullable=False),
    sa.Column('expirydate', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_payment_details_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_payment_details'))
    )
    op.create_table('issued_book',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('issue_date', sa.DateTime(), nullable=True),
    sa.Column('return_date', sa.DateTime(), nullable=True),
    sa.Column('return_status', sa.Boolean(), nullable=True),
    sa.Column('book_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['book_id'], ['books.id'], name=op.f('fk_issued_book_book_id_books')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_issued_book_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_issued_book'))
    )
    op.create_table('purchased_book',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('purchase_date', sa.DateTime(), nullable=True),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('book_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['book_id'], ['books.id'], name=op.f('fk_purchased_book_book_id_books')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_purchased_book_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_purchased_book'))
    )
    op.create_table('ratings',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('book_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('rating', sa.Integer(), nullable=False),
    sa.Column('feedback', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['book_id'], ['books.id'], name=op.f('fk_ratings_book_id_books')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_ratings_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_ratings'))
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('ratings')
    op.drop_table('purchased_book')
    op.drop_table('issued_book')
    op.drop_table('payment_details')
    op.drop_table('books')
    op.drop_table('UsersRoles')
    op.drop_table('users')
    op.drop_table('sections')
    op.drop_table('roles')
    # ### end Alembic commands ###
